{"version":3,"sources":["webpack:///./examples/simple.js"],"names":["schema","name","type","required","min","max","address","fields","province","city","message","async","validator","rule","value","callback","setTimeout","Error","validate","errors","console","log"],"mappings":";;;;;;AAAA;AAAA;;AAEA;;AAEA,IAAMA,SAAS,IAAI,uDAAJ,CAAW;AACxBC,QAAM;AACJC,UAAM,QADF;AAEJC,cAAU,IAFN;AAGJC,SAAK,CAHD;AAIJC,SAAK;AAJD,GADkB;AAOxBC,WAAS;AACPJ,UAAM,QADC;AAEPC,cAAU,IAFH;AAGPI,YAAQ;AACNC,gBAAU;AACRN,cAAM,QADE;AAERC,kBAAU,IAFF;AAGRC,aAAK;AAHG,OADJ;AAMNK,YAAM;AACJP,cAAM,QADF;AAEJQ,iBAAS,gBAFL;AAGJN,aAAK;AAHD,OANA;AAWNO,aAAO;AACLC,iBADK,qBACKC,IADL,EACWC,KADX,EACkBC,QADlB,EAC4B;AAC/BC,qBAAW,YAAM;AACfD,qBAASF,KAAKH,OAAd;AACD,WAFD,EAEG,GAFH;AAGD,SALI;;AAMLA,iBAAS;AANJ;AAXD;AAHD,GAPe;AA+BxBC,SAAO;AACLC,aADK,qBACKC,IADL,EACWC,KADX,EACkBC,QADlB,EAC4B;AAC/BC,iBAAW,YAAM;AACfD,iBAAS,CAAC,IAAIE,KAAJ,CAAUJ,KAAKH,OAAf,CAAD,CAAT;AACD,OAFD,EAEG,GAFH;AAGD,KALI;;AAMLA,aAAS;AANJ;AA/BiB,CAAX,CAAf;;AAyCAV,OAAOkB,QAAP,CAAgB;AACdjB,QAAM,CADQ;AAEdK,WAAS;AACPG,UAAM;AADC,GAFK;AAKdE,SAAO;AALO,CAAhB,EAMG,UAACQ,MAAD,EAASZ,MAAT,EAAoB;AACrBa,UAAQC,GAAR,CAAY,QAAZ;AACAD,UAAQC,GAAR,CAAYF,MAAZ;AACAC,UAAQC,GAAR,CAAY,QAAZ;AACAD,UAAQC,GAAR,CAAYd,MAAZ;AACD,CAXD;;AAaAa,QAAQC,GAAR,CAAY,KAAZ,E","file":"examples/simple.js","sourcesContent":["/* eslint no-console:0 */\n\nimport Schema from 'async-validator';\n\nconst schema = new Schema({\n  name: {\n    type: 'string',\n    required: true,\n    min: 5,\n    max: 10,\n  },\n  address: {\n    type: 'object',\n    required: true,\n    fields: {\n      province: {\n        type: 'string',\n        required: true,\n        min: 4,\n      },\n      city: {\n        type: 'string',\n        message: 'custom message',\n        min: 5,\n      },\n      async: {\n        validator(rule, value, callback) {\n          setTimeout(() => {\n            callback(rule.message);\n          }, 100);\n        },\n        message: 'address async fails',\n      },\n    },\n  },\n  async: {\n    validator(rule, value, callback) {\n      setTimeout(() => {\n        callback([new Error(rule.message)]);\n      }, 100);\n    },\n    message: 'async fails',\n  },\n});\n\nschema.validate({\n  name: 2,\n  address: {\n    city: 2,\n  },\n  async: '2',\n}, (errors, fields) => {\n  console.log('errors');\n  console.log(errors);\n  console.log('fields');\n  console.log(fields);\n});\n\nconsole.log('end');\n\n\n\n// WEBPACK FOOTER //\n// ./examples/simple.js"],"sourceRoot":""}